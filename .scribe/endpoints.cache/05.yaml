## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Managing Users'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: 'Managing Users'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all users'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      sort:
        name: sort
        description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
        required: false
        example: sort=name
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[name]':
        name: 'filter[name]'
        description: 'Filter by status name. Wildcards are supported.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'filter[email]':
        name: 'filter[email]'
        description: 'Filter by email. Wildcards are supported.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      sort: sort=name
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"type":"user","id":1,"attributes":{"name":"Aliya Haag","email":"feeney.ramon@example.net","isManager":false},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/1"}},{"type":"user","id":2,"attributes":{"name":"Anjali Rolfson","email":"wiza.marques@example.net","isManager":false},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/2"}},{"type":"user","id":3,"attributes":{"name":"Kim Grimes","email":"chet.cremin@example.com","isManager":false},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/3"}},{"type":"user","id":4,"attributes":{"name":"Else Christiansen","email":"xtorphy@example.org","isManager":false},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/4"}},{"type":"user","id":5,"attributes":{"name":"Domenico Rohan","email":"metz.wava@example.net","isManager":false},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/5"}},{"type":"user","id":6,"attributes":{"name":"Jamel Streich","email":"justine85@example.net","isManager":false},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/6"}},{"type":"user","id":7,"attributes":{"name":"Lilliana Erdman","email":"rhintz@example.com","isManager":false},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/7"}},{"type":"user","id":8,"attributes":{"name":"Anthony Kris","email":"raven.schmidt@example.net","isManager":false},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/8"}},{"type":"user","id":9,"attributes":{"name":"Herman Block","email":"ddickens@example.com","isManager":false},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/9"}},{"type":"user","id":10,"attributes":{"name":"Marc Wolf","email":"grady.lonie@example.net","isManager":false},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/10"}},{"type":"user","id":11,"attributes":{"name":"The Manager","email":"manager@manager.com","isManager":true},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/11"}},{"type":"user","id":12,"attributes":{"name":"My User","email":"exampleMy@test.com","isManager":false},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/12"}}],"links":{"first":"http:\/\/tickets-please.test\/api\/v1\/users?page=1","last":"http:\/\/tickets-please.test\/api\/v1\/users?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/tickets-please.test\/api\/v1\/users?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/tickets-please.test\/api\/v1\/users","per_page":15,"to":12,"total":12}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 9|GvsfPQco0mahxABx5EUPiuJkjMHR442IWVvHAZaQfcb84077'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: 'Managing Users'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: true
        example: zbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.isManager:
        name: data.attributes.isManager
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: ''
        required: true
        example: '|]|{+-'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: architecto
          email: zbailey@example.net
          isManager: false
          password: '|]|{+-'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"user","id":16,"attributes":{"name":"My User","email":"user@user.com","isManager":false},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/16"}}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 9|GvsfPQco0mahxABx5EUPiuJkjMHR442IWVvHAZaQfcb84077'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'Managing Users'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"user","id":1,"attributes":{"name":"Aliya Haag","email":"feeney.ramon@example.net","isManager":false},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/1"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 9|GvsfPQco0mahxABx5EUPiuJkjMHR442IWVvHAZaQfcb84077'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'Managing Users'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 9|GvsfPQco0mahxABx5EUPiuJkjMHR442IWVvHAZaQfcb84077'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/users/{user_id}'
    metadata:
      groupName: 'Managing Users'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Replace a user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: true
        example: zbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.isManager:
        name: data.attributes.isManager
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: ''
        required: true
        example: '|]|{+-'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: architecto
          email: zbailey@example.net
          isManager: false
          password: '|]|{+-'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"user","id":16,"attributes":{"name":"My User","email":"user@user.com","isManager":false},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/16"}}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 9|GvsfPQco0mahxABx5EUPiuJkjMHR442IWVvHAZaQfcb84077'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/users/{user_id}'
    metadata:
      groupName: 'Managing Users'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: false
        example: zbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.isManager:
        name: data.attributes.isManager
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: ''
        required: false
        example: '|]|{+-'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: architecto
          email: zbailey@example.net
          isManager: true
          password: '|]|{+-'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"user","id":16,"attributes":{"name":"My User","email":"user@user.com","isManager":false},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/16"}}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 9|GvsfPQco0mahxABx5EUPiuJkjMHR442IWVvHAZaQfcb84077'
    controller: null
    method: null
    route: null
    custom: []
